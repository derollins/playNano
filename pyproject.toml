# pyproject.toml

[project]
name = "playNano"
version = "0.1.0"
description = "Python toolkit for processing and visualising high-speed AFM (Atomic Force Microscopy) video data."
readme = "README.md"
requires-python = ">=3.10"
authors = [
  { name = "D. E. Rollins", email = "d.e.rollins@leeds.ac.uk"}
]
license = {text = "GPL-3.0-or-later"}
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = [
  "afm",
  "atomic force microscopy",
  "image processing",
  "video analysis",
  "scientific visualization"
]
dependencies = [
  "numpy<2.0",
  "h5py",
  "Pillow",
  "tifffile", 
  "matplotlib",
  "topostats",
  "afmreader",
  "opencv-python",
  "python-dateutil>=2.8",
  "scipy",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "flake8",
    "pre-commit",
    "isort",
    "ruff",
    "black",
]

[project.scripts]
playnano = "playNano.cli:main"

[project.entry-points."playNano.filters"]
topostats_flatten = "playNano.processing.filters:topostats_flatten"
median_filter     = "playNano.processing.filters:median_filter"
gaussian_filter   = "playNano.processing.filters:gaussian_filter"
flatten_poly      = "playNano.processing.filters:flatten_poly"

[project.urls]
GitHub = "https://github.com/derollins/playNano"

[tool.setuptools.packages.find]
where = ["src"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-ambiguous-features = true

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
known_first_party = ["playNano"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.venv
  | __pycache__
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
lint.select = [
    "E",
    "F",
    "I",
    "B",
]
lint.ignore = [
    "E203",
    "I001",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "--cov=playNano --cov-report=term-missing"
